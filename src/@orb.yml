version: 2.1

###########################################################
## GitHub: https://github.com/CircleCI-Public/slack-orb ##
###########################################################


description: |
  Easily integrate custom Slack notifications into your CircleCI projects. Create custom alert messages for any job or receive status updates.

# Create your key here: https://api.slack.com/incoming-webhooks

## Requirements ##
## - cURL

commands:
  ## NOTIFY ##
  notify:
    description: Notify a slack channel with a custom message
    parameters:
      webhook:
        description: Enter either your Webhook value or use the CircleCI UI to add your token under the 'SLACK_WEBHOOK' env var
        type: string
        default: ${SLACK_WEBHOOK}
      message:
        description: Enter custom message.
        type: string
        default: Your job on CircleCI has completed.
      color:
        description: Hex color value for notification attachment color.
        type: string
        default: "#333333"
      mentions:
        description: A comma separated list of user IDs. No spaces.
        type: string
        default: ""
    steps:
      - run:
          name: Provide error if non-bash shell
          command: |
            if [ $(echo $SHELL | grep -c bash) -ne 1 ]; then
              echo Bash not installed.
              exit 1
            fi

      - run:
          name: Slack Notification
          shell: /bin/bash
          command: |
            # Provide error if no webhook is set and error. Otherwise continue
            if [ -z "<< parameters.webhook >>" ]; then
              echo "NO SLACK WEBHOOK SET"
              echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
              exit 1
            else
              # Webhook properly set.
              echo Notifying Slack Channel
              #Create Members string
              if [ -n "<< parameters.mentions >>" ]; then
                IFS=",";
                SLACK_MEMBERS="<< parameters.mentions >>";
                for i in "${SLACK_MEMBERS[@]}"; do
                  if [ $(echo ${i} | head -c 1) == "S" ]; then
                    SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                  else
                    SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                  fi
                done
              fi
              curl -X POST -H 'Content-type: application/json' \
                --data \
                "{ \
                  \"attachments\": [ \
                    { \
                      \"fallback\": \"<< parameters.message >> - $CIRCLE_BUILD_URL\", \
                      \"text\": \"<< parameters.message >> $SLACK_MENTIONS\", \
                      \"fields\": [ \
                        { \
                          \"title\": \"Project\", \
                          \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                          \"short\": true \
                        }, \
                        { \
                          \"title\": \"Job Number\", \
                          \"value\": \"$CIRCLE_BUILD_NUM\", \
                          \"short\": true \
                        } \
                      ], \
                      \"actions\": [ \
                        { \
                          \"type\": \"button\", \
                          \"text\": \"Visit Job\", \
                          \"url\": \"$CIRCLE_BUILD_URL\" \
                        } \
                      ], \
                      \"color\": \"<< parameters.color >>\" \
                    } \
                  ] \
                }" << parameters.webhook >>
            fi

  ## STATUS ##
  status:
    description: Send a status alert at the end of a job based on success or failure. Must be the last step in a job.
    parameters:
      webhook:
        description: Enter either your Webhook value or use the CircleCI UI to add your token under the 'SLACK_WEBHOOK' env var
        type: string
        default: ${SLACK_WEBHOOK}
      fail_only:
        description: If 'true', notifications successful jobs will not be sent
        type: string
        default: "false"
      mentions:
        description: A comma separated list of user IDs. No spaces.
        type: string
        default: ""
      only_for_branch:
        description: If, set, a specific branch for which slack status updates will be sent.
        type: string
        default: ""
    steps:
      - run:
          name: Slack - Setting Failure Condition
          command: |
            echo 'export SLACK_BUILD_STATUS="fail"' >> $BASH_ENV
          when: on_fail
      - run:
          name: Slack - Setting Success Condition
          command: |
            echo 'export SLACK_BUILD_STATUS="success"' >> $BASH_ENV
          when: on_success

      - run:
          name: Provide error if non-bash shell
          command: |
            if [ $(echo $SHELL | grep -c bash) -ne 1 ]; then
              echo Bash not installed.
              exit 1
            fi

      - run:
          name: Slack - Sending Status Alert
          shell: /bin/bash
          command: |
            if [ "x" == "x<< parameters.only_for_branch>>" ] || [ "${CIRCLE_BRANCH}" == "<< parameters.only_for_branch>>" ]; then
              # Provide error if no webhook is set and error. Otherwise continue
              if [ -z "<< parameters.webhook >>" ]; then
                echo "NO SLACK WEBHOOK SET"
                echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
                exit 1
              else
                #Create Members string
                if [ -n "<< parameters.mentions >>" ]; then
                  IFS=",";
                  SLACK_MEMBERS="<< parameters.mentions >>";
                  for i in "${SLACK_MEMBERS[@]}"; do
                    if [ $(echo ${i} | head -c 1) == "S" ]; then
                      SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                    else
                      SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                    fi
                  done
                fi
                #If successful
                if [ "$SLACK_BUILD_STATUS" = "success" ]; then
                  #Skip if fail_only
                  if [ << parameters.fail_only >> = true ]; then
                    echo "The job completed successfully"
                    echo '"fail_only" is set to "true". No Slack notification sent.'
                  else
                    curl -X POST -H 'Content-type: application/json' \
                      --data "{ \
                                \"attachments\": [ \
                                  { \
                                    \"fallback\": \"A job has succeeded - $CIRCLE_BUILD_URL\", \
                                    \"text\": \":tada: A $CIRCLE_JOB job has succeeded! $SLACK_MENTIONS\", \
                                    \"fields\": [ \
                                      { \
                                        \"title\": \"Project\", \
                                        \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                                        \"short\": true \
                                      }, { \
                                        \"title\": \"Job Number\", \
                                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                                        \"short\": true \
                                      } \
                                    ], \
                                    \"actions\": [ \
                                      { \
                                        \"type\": \"button\", \
                                        \"text\": \"Visit Job\", \
                                        \"url\": \"$CIRCLE_BUILD_URL\" \
                                      } \
                                    ], \
                                    \"color\": \"#1CBF43\" \
                                  } \
                                ] \
                              } " << parameters.webhook >>
                    echo "Job completed successfully. Alert sent."
                  fi
                else
                  #If Failed
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{ \
                      \"attachments\": [ \
                        { \
                          \"fallback\": \"A job has failed - $CIRCLE_BUILD_URL\", \
                          \"text\": \":red_circle: A $CIRCLE_JOB job has failed! $SLACK_MENTIONS\", \
                          \"fields\": [ \
                            { \
                              \"title\": \"Project\", \
                              \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                              \"short\": true \
                            }, { \
                              \"title\": \"Job Number\", \
                              \"value\": \"$CIRCLE_BUILD_NUM\", \
                              \"short\": true \
                            } \
                          ], \
                          \"actions\": [ \
                            { \
                              \"type\": \"button\", \
                              \"text\": \"Visit Job\", \
                              \"url\": \"$CIRCLE_BUILD_URL\" \
                            } \
                          ], \
                          \"color\": \"#ed5c5c\" \
                        } \
                      ] \
                    } " << parameters.webhook >>
                  echo "Job failed. Alert sent."
                fi
              fi
            fi
          when: always
#
# Usage examples of Slack Orb
#
examples:
  notify:
    description: "Notify a slack channel with a custom message at any point in a job with this custom step. More docs here: https://github.com/CircleCI-Public/slack-orb"
    usage:
      version: 2.1
      orbs:
        slack: circleci/slack@volatile
      jobs:
        build:
          docker:
            - image: <docker image>
          steps:
            - slack/notify:
                message: "This is a custom message notification" # Optional: Enter your own message
                mentions: "USERID1,USERID2," # Optional: Enter the Slack IDs of any user or group (sub_team) to be mentioned
                color: "#42e2f4" # Optional: Assign custom colors for each notification
                webhook: "webhook" # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK
  status:
    description: "Send a status alert at the end of a job based on success or failure. This must be the last step in a job."
    usage:
      version: 2.1
      orbs:
        slack: circleci/slack@volatile
      jobs:
        build:
          docker:
            - image: <docker image>
          steps:
            # With fail_only set to true, no alert will be sent in this example. Change the exit status on the next line to produce an error.
            - run: exit 0
            - slack/status:
                mentions: "USERID1,USERID2" # Optional: Enter the Slack IDs of any user or group (sub_team) to be mentioned
                fail_only: "true" # Optional: if set to "true" then only failure messages will occur.
                webhook: "webhook" # Optional: Enter a specific webhook here or the default will use $SLACK_WEBHOOK
                only_for_branch: "only_for_branch" # Optional: If set, a specific branch for which status updates will be sent.
